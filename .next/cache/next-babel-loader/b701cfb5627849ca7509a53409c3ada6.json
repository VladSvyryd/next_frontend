{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\vlado\\\\Documents\\\\next\\\\pages\\\\about.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Nav } from \"../components/nav/Nav\";\nimport fetch from \"isomorphic-unfetch\";\nimport { useState } from \"react\";\n\nvar about = function about(_ref) {\n  var pages = _ref.pages;\n\n  var _useState = useState(pages.find(function (p) {\n    return p.path === \"about\";\n  })),\n      pageObject = _useState[0],\n      set = _useState[1];\n\n  console.log(pageObject);\n  return __jsx(React.Fragment, null, __jsx(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"This is About\"), \";\", __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \" \", pageObject.picture.map(function (pic) {\n    return __jsx(\"div\", {\n      key: pic.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: \"http://localhost:1337\".concat(pic.url),\n      style: {\n        width: \"200px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, pic.description));\n  })));\n};\n\nabout.getInitialProps = function _callee() {\n  var res, json;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"http://localhost:1337/pages\"));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          json = _context.sent;\n          return _context.abrupt(\"return\", {\n            pages: json\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default about;","map":{"version":3,"sources":["C:/Users/vlado/Documents/next/pages/about.js"],"names":["Nav","fetch","useState","about","pages","find","p","path","pageObject","set","console","log","picture","map","pic","id","url","width","description","getInitialProps","res","json"],"mappings":";;;;AAAA,SAASA,GAAT,QAAoB,uBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AACA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAAA,kBACDF,QAAQ,CAACE,KAAK,CAACC,IAAN,CAAW,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,IAAF,KAAW,OAAf;AAAA,GAAZ,CAAD,CADP;AAAA,MACpBC,UADoB;AAAA,MACRC,GADQ;;AAE3BC,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACA,SACE,4BACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,OAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEGA,UAAU,CAACI,OAAX,CAAmBC,GAAnB,CAAuB,UAAAC,GAAG;AAAA,WACzB;AAAK,MAAA,GAAG,EAAEA,GAAG,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,GAAG,iCAA0BD,GAAG,CAACE,GAA9B,CADL;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIH,GAAG,CAACI,WAAR,CALF,CADyB;AAAA,GAA1B,CAFH,CAHF,CADF;AAkBD,CArBD;;AAsBAf,KAAK,CAACgB,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACJlB,KAAK,CAAC,6BAAD,CADD;;AAAA;AAChBmB,UAAAA,GADgB;AAAA;AAAA,2CAEHA,GAAG,CAACC,IAAJ,EAFG;;AAAA;AAEhBA,UAAAA,IAFgB;AAAA,2CAGf;AAAEjB,YAAAA,KAAK,EAAEiB;AAAT,WAHe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAKA,eAAelB,KAAf","sourcesContent":["import { Nav } from \"../components/nav/Nav\";\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport { useState } from \"react\";\r\nconst about = ({ pages }) => {\r\n  const [pageObject, set] = useState(pages.find(p => p.path === \"about\"));\r\n  console.log(pageObject);\r\n  return (\r\n    <>\r\n      <Nav />\r\n      <div>This is About</div>;\r\n      <div>\r\n        {\" \"}\r\n        {pageObject.picture.map(pic => (\r\n          <div key={pic.id}>\r\n            <img\r\n              src={`http://localhost:1337${pic.url}`}\r\n              style={{ width: \"200px\" }}\r\n            />\r\n            <p>{pic.description}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nabout.getInitialProps = async () => {\r\n  const res = await fetch(\"http://localhost:1337/pages\");\r\n  const json = await res.json();\r\n  return { pages: json };\r\n};\r\nexport default about;\r\n"]},"metadata":{},"sourceType":"module"}